(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error("Cannot find module '"+o+"'");throw f.code="MODULE_NOT_FOUND",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){
'use strict';

var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () {
  function defineProperties(target, props) {
    for (var i = 0; i < props.length; i++) {
      var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if ("value" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);
    }
  }return function (Constructor, protoProps, staticProps) {
    if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;
  };
}();

var _get = function get(object, property, receiver) {
  if (object === null) object = Function.prototype;var desc = Object.getOwnPropertyDescriptor(object, property);if (desc === undefined) {
    var parent = Object.getPrototypeOf(object);if (parent === null) {
      return undefined;
    } else {
      return get(parent, property, receiver);
    }
  } else if ("value" in desc) {
    return desc.value;
  } else {
    var getter = desc.get;if (getter === undefined) {
      return undefined;
    }return getter.call(receiver);
  }
};

var _dEngine = require('2d-engine');

function _classCallCheck(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}

function _possibleConstructorReturn(self, call) {
  if (!self) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }return call && ((typeof call === "undefined" ? "undefined" : _typeof(call)) === "object" || typeof call === "function") ? call : self;
}

function _inherits(subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function, not " + (typeof superClass === "undefined" ? "undefined" : _typeof(superClass)));
  }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
}

var BOUNCE_ABSORPTION_BALL = .98;
var BOUNCE_ABSORPTION_WALL = .68;
var BALL_RADIUS_MIN = 25;
var BALL_RADIUS_MAX = 500;
var GRAVITY = 9.8;

var BallEntity = function (_BaseEntity) {
  _inherits(BallEntity, _BaseEntity);

  function BallEntity(options) {
    _classCallCheck(this, BallEntity);

    var _this = _possibleConstructorReturn(this, (BallEntity.__proto__ || Object.getPrototypeOf(BallEntity)).call(this, options));

    _this.heading = new _dEngine.Vector(Math.random(), Math.random());

    _this.radius = Math.random() * Math.max(BALL_RADIUS_MAX - BALL_RADIUS_MIN, 1) + BALL_RADIUS_MIN;
    return _this;
  }

  _createClass(BallEntity, [{
    key: 'startingPosition',
    value: function startingPosition() {
      return new _dEngine.Point(Math.floor(Math.random() * this.xMax), Math.floor(Math.random() * this.yMax));
    }
  }, {
    key: 'setScales',
    value: function setScales(engine) {
      _get(BallEntity.prototype.__proto__ || Object.getPrototypeOf(BallEntity.prototype), 'setScales', this).call(this, engine);

      this.pos = this.startingPosition();
    }
  }, {
    key: 'update',
    value: function update(delta) {
      var other;
      var tempVector;
      var magnitude;
      var pushDistance;
      var newX;
      var newY;

      for (var i = 0; i < this.entities.length; i++) {
        other = this.entities[i];

        tempVector = this.pos.minus(other.pos);
        magnitude = tempVector.magnitude();

        if (other !== this && magnitude < this.radius + other.radius) {
          pushDistance = tempVector.times((this.radius + other.radius - magnitude) / magnitude);

          this.pos.plusEquals(pushDistance);
          other.pos.x -= pushDistance.x;
          other.pos.y -= pushDistance.y;

          tempVector = this.heading.minus(other.heading);
          pushDistance.normalize();
          var dot = tempVector.dot(pushDistance);

          if (dot < 0) {
            this.heading.scalePlusEquals(-1 * BOUNCE_ABSORPTION_BALL * dot, pushDistance);
            other.heading.scalePlusEquals(BOUNCE_ABSORPTION_BALL * dot, pushDistance);
          }
        }
      }

      this.heading.y = this.heading.y + GRAVITY / delta;
      this.pos.plusEquals(this.heading);

      newX = this.pos.x;
      newY = this.pos.y;

      if (this.pos.x > this.xMax - this.radius) {
        this.pos.x = this.xMax - this.radius - (this.pos.x - (this.xMax - this.radius));
        this.heading.x *= -1 * BOUNCE_ABSORPTION_WALL;
      } else if (this.pos.x < this.radius) {
        this.pos.x = this.radius - (this.pos.x - this.radius);
        this.heading.x *= -1 * BOUNCE_ABSORPTION_WALL;
      }

      if (this.pos.y > this.yMax - this.radius) {
        this.pos.y = this.yMax - this.radius - (this.pos.y - (this.yMax - this.radius));
        this.heading.y *= -1 * BOUNCE_ABSORPTION_WALL;
      } else if (this.pos.y < this.radius) {
        this.pos.y = this.radius - (this.pos.y - this.radius);
        this.heading.y *= -1 * BOUNCE_ABSORPTION_WALL;
      }

      this.element.attr('transform', 'translate(' + this.xScale(this.pos.x) + ',' + this.yScale(this.pos.y) + ')');
    }
  }, {
    key: 'render',
    value: function render(canvas) {
      this.element = canvas.append('circle').attr('r', this.xScale(this.radius));
    }
  }]);

  return BallEntity;
}(_dEngine.BaseEntity);

exports.default = BallEntity;

},{"2d-engine":"2d-engine"}],2:[function(require,module,exports){
'use strict';

var _dEngine = require('2d-engine');

var _BallEntity = require('./BallEntity');

var _BallEntity2 = _interopRequireDefault(_BallEntity);

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : { default: obj };
}

var STARTING_COUNT = 30;

var entity;
var engine = new _dEngine.SVGEngine('.canvas', 800, 800, 10000, 10000);

for (var i = 0; i < STARTING_COUNT; i++) {
  entity = new _BallEntity2.default();
  entity.entities = engine.entities;

  engine.addEntity(entity);
}

engine.start();

},{"./BallEntity":1,"2d-engine":"2d-engine"}]},{},[2])
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm5vZGVfbW9kdWxlcy9icm93c2VyLXBhY2svX3ByZWx1ZGUuanMiLCJkaXN0L2V4YW1wbGVzL2JvdW5jZS9CYWxsRW50aXR5LmpzIiwiZGlzdC9leGFtcGxlcy9ib3VuY2UvbWFpbi5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUNBQTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFFQSxJQUFNLHlCQUFOLEFBQStCO0FBQy9CLElBQU0seUJBQU4sQUFBK0I7QUFDL0IsSUFBTSxrQkFBTixBQUF3QjtBQUN4QixJQUFNLGtCQUFOLEFBQXdCO0FBQ3hCLElBQU0sVUFBTixBQUFnQjs7SSxBQUVLO3dCQUNuQjs7c0JBQUEsQUFBWSxTQUFTOzBCQUFBOzt3SEFBQSxBQUNiLEFBRU47O1VBQUEsQUFBSyxVQUFVLG9CQUNiLEtBRGEsQUFDYixBQUFLLFVBQ0wsS0FGRixBQUFlLEFBRWIsQUFBSyxBQUdQOztVQUFBLEFBQUssU0FBUyxLQUFBLEFBQUssV0FBWSxLQUFBLEFBQUssSUFBSSxrQkFBVCxBQUEyQixpQkFBNUMsQUFBaUIsQUFBNEMsS0FSeEQsQUFRbkIsQUFBaUY7V0FDbEY7Ozs7O3VDQUVrQixBQUNqQjthQUFPLG1CQUNMLEtBQUEsQUFBSyxNQUFNLEtBQUEsQUFBSyxXQUFXLEtBRHRCLEFBQ0wsQUFBZ0MsT0FDaEMsS0FBQSxBQUFLLE1BQU0sS0FBQSxBQUFLLFdBQVcsS0FGN0IsQUFBTyxBQUVMLEFBQWdDLEFBRW5DOzs7OzhCLEFBRVMsUUFBUSxBQUNoQjt3SEFBQSxBQUFnQixBQUVoQjs7V0FBQSxBQUFLLE1BQU0sS0FBWCxBQUFXLEFBQUssQUFDakI7Ozs7MkIsQUFFTSxPQUFPLEFBQ1o7VUFBQSxBQUFJLEFBQ0o7VUFBQSxBQUFJLEFBQ0o7VUFBQSxBQUFJLEFBQ0o7VUFBQSxBQUFJLEFBQ0o7VUFBQSxBQUFJLEFBQ0o7VUFBQSxBQUFJLEFBRUo7O1dBQUssSUFBSSxJQUFULEFB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Q0FBQSxBQUFDLElBQW5CLEFBQXVCLEFBQ3hCO0FBRUQ7O1dBQUEsQUFBSyxRQUFMLEFBQ0csS0FESCxBQUNRLGFBQWEsZUFBZSxLQUFBLEFBQUssT0FBTyxLQUFBLEFBQUssSUFBaEMsQUFBZSxBQUFxQixLQUFwQyxBQUF5QyxNQUFNLEtBQUEsQUFBSyxPQUFPLEtBQUEsQUFBSyxJQUFoRSxBQUErQyxBQUFxQixLQUR6RixBQUM4RixBQUMvRjs7OzsyQixBQUVNLFFBQVEsQUFDYjtXQUFBLEFBQUssVUFBVSxPQUFBLEFBQU8sT0FBUCxBQUFjLFVBQWQsQUFDWixLQURZLEFBQ1AsS0FBSyxLQUFBLEFBQUssT0FBTyxLQUR6QixBQUFlLEFBQ0YsQUFBaUIsQUFDL0I7Ozs7Ozs7a0IsQUF0RmtCOzs7OztBQ1JyQjs7QUFDQTs7Ozs7Ozs7QUFFQSxJQUFNLGlCQUFOLEFBQXVCOztBQUV2QixJQUFBLEFBQUk7QUFDSixJQUFJLFNBQVMsdUJBQUEsQUFDWCxXQURXLEFBRVgsS0FGVyxBQUVOLEtBRk0sQUFHWCxPQUhGLEFBQWEsQUFHSjs7QUFHVCxLQUFLLElBQUksSUFBVCxBQUFhLEdBQUcsSUFBaEIsQUFBb0IsZ0JBQXBCLEFBQW9DLEtBQUssQUFDdkM7V0FBUyxpQkFBVCxBQUNBO1NBQUEsQUFBTyxXQUFXLE9BQWxCLEFBQXlCLEFBRXpCOztTQUFBLEFBQU8sVUFBUCxBQUFpQixBQUNsQjs7O0FBRUQsT0FBQSxBQUFPIiwiZmlsZSI6ImdlbmVyYXRlZC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzQ29udGVudCI6WyIoZnVuY3Rpb24gZSh0LG4scil7ZnVuY3Rpb24gcyhvLHUpe2lmKCFuW29dKXtpZighdFtvXSl7dmFyIGE9dHlwZW9mIHJlcXVpcmU9PVwiZnVuY3Rpb25cIiYmcmVxdWlyZTtpZighdSYmYSlyZXR1cm4gYShvLCEwKTtpZihpKXJldHVybiBpKG8sITApO3ZhciBmPW5ldyBFcnJvcihcIkNhbm5vdCBmaW5kIG1vZHVsZSAnXCIrbytcIidcIik7dGhyb3cgZi5jb2RlPVwiTU9EVUxFX05PVF9GT1VORFwiLGZ9dmFyIGw9bltvXT17ZXhwb3J0czp7fX07dFtvXVswXS5jYWxsKGwuZXhwb3J0cyxmdW5jdGlvbihlKXt2YXIgbj10W29dWzFdW2VdO3JldHVybiBzKG4/bjplKX0sbCxsLmV4cG9ydHMsZSx0LG4scil9cmV0dXJuIG5bb10uZXhwb3J0c312YXIgaT10eXBlb2YgcmVxdWlyZT09XCJmdW5jdGlvblwiJiZyZXF1aXJlO2Zvcih2YXIgbz0wO288ci5sZW5ndGg7bysrKXMocltvXSk7cmV0dXJuIHN9KSIsImltcG9ydCB7UG9pbnQsIFZlY3RvciwgQmFzZUVudGl0eX0gZnJvbSAnMmQtZW5naW5lJztcblxuY29uc3QgQk9VTkNFX0FCU09SUFRJT05fQkFMTCA9IC45ODtcbmNvbnN0IEJPVU5DRV9BQlNPUlBUSU9OX1dBTEwgPSAuNjg7XG5jb25zdCBCQUxMX1JBRElVU19NSU4gPSAyNTtcbmNvbnN0IEJBTExfUkFESVVTX01BWCA9IDUwMDtcbmNvbnN0IEdSQVZJVFkgPSA5Ljg7XG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIEJhbGxFbnRpdHkgZXh0ZW5kcyBCYXNlRW50aXR5IHtcbiAgY29uc3RydWN0b3Iob3B0aW9ucykge1xuICAgIHN1cGVyKG9wdGlvbnMpO1xuXG4gICAgdGhpcy5oZWFkaW5nID0gbmV3IFZlY3RvcihcbiAgICAgIE1hdGgucmFuZG9tKCksXG4gICAgICBNYXRoLnJhbmRvbSgpXG4gICAgKTtcblxuICAgIHRoaXMucmFkaXVzID0gTWF0aC5yYW5kb20oKSAqIChNYXRoLm1heChCQUxMX1JBRElVU19NQVggLSBCQUxMX1JBRElVU19NSU4sIDEpKSArIEJBTExfUkFESVVTX01JTjtcbiAgfVxuXG4gIHN0YXJ0aW5nUG9zaXRpb24oKSB7XG4gICAgcmV0dXJuIG5ldyBQb2ludChcbiAgICAgIE1hdGguZmxvb3IoTWF0aC5yYW5kb20oKSAqIHRoaXMueE1heCksXG4gICAgICBNYXRoLmZsb29yKE1hdGgucmFuZG9tKCkgKiB0aGlzLnlNYXgpXG4gICAgKTtcbiAgfVxuXG4gIHNldFNjYWxlcyhlbmdpbmUpIHtcbiAgICBzdXBlci5zZXRTY2FsZXMoZW5naW5lKTtcblxuICAgIHRoaXMucG9zID0gdGhpcy5zdGFydGluZ1Bvc2l0aW9uKCk7XG4gIH1cblxuICB1cGRhdGUoZGVsdGEpIHtcbiAgICB2YXIgb3RoZXI7XG4gICAgdmFyIHRlbXBWZWN0b3I7XG4gICAgdmFyIG1hZ25pdHVkZTtcbiAgICB2YXIgcHVzaERpc3RhbmNlO1xuICAgIHZhciBuZXdYO1xuICAgIHZhciBuZXdZO1xuXG4gICAgZm9yICh2YXIgaSA9IDA7IGkgPCB0aGlzLmVudGl0aWVzLmxlbmd0aDsgaSsrKSB7XG4gICAgICBvdGhlciA9IHRoaXMuZW50aXRpZXNbaV07XG5cbiAgICAgIHRlbXBWZWN0b3IgPSB0aGlzLnBvcy5taW51cyhvdGhlci5wb3MpO1xuICAgICAgbWFnbml0dWRlID0gdGVtcFZlY3Rvci5tYWduaXR1ZGUoKTtcblxuICAgICAgaWYgKG90aGVyICE9PSB0aGlzICYmIG1hZ25pdHVkZSA8ICh0aGlzLnJhZGl1cyArIG90aGVyLnJhZGl1cykpIHtcbiAgICAgICAgcHVzaERpc3RhbmNlID0gdGVtcFZlY3Rvci50aW1lcygodGhpcy5yYWRpdXMgKyBvdGhlci5yYWRpdXMgLSBtYWduaXR1ZGUpIC8gbWFnbml0dWRlKTtcblxuICAgICAgICB0aGlzLnBvcy5wbHVzRXF1YWxzKHB1c2hEaXN0YW5jZSk7XG4gICAgICAgIG90aGVyLnBvcy54IC09IHB1c2hEaXN0YW5jZS54O1xuICAgICAgICBvdGhlci5wb3MueSAtPSBwdXNoRGlzdGFuY2UueTtcblxuICAgICAgICB0ZW1wVmVjdG9yID0gKHRoaXMuaGVhZGluZy5taW51cyhvdGhlci5oZWFkaW5nKSk7XG4gICAgICAgIHB1c2hEaXN0YW5jZS5ub3JtYWxpemUoKTtcbiAgICAgICAgdmFyIGRvdCA9IHRlbXBWZWN0b3IuZG90KHB1c2hEaXN0YW5jZSk7XG5cbiAgICAgICAgaWYgKGRvdCA8IDApIHtcbiAgICAgICAgICB0aGlzLmhlYWRpbmcuc2NhbGVQbHVzRXF1YWxzKC0xICogQk9VTkNFX0FCU09SUFRJT05fQkFMTCAqIGRvdCwgcHVzaERpc3RhbmNlKTtcbiAgICAgICAgICBvdGhlci5oZWFkaW5nLnNjYWxlUGx1c0VxdWFscyhCT1VOQ0VfQUJTT1JQVElPTl9CQUxMICogZG90LCBwdXNoRGlzdGFuY2UpO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuXG4gICAgdGhpcy5oZWFkaW5nLnkgPSB0aGlzLmhlYWRpbmcueSArIChHUkFWSVRZIC8gZGVsdGEpO1xuICAgIHRoaXMucG9zLnBsdXNFcXVhbHModGhpcy5oZWFkaW5nKTtcblxuICAgIG5ld1ggPSB0aGlzLnBvcy54O1xuICAgIG5ld1kgPSB0aGlzLnBvcy55O1xuXG4gICAgaWYgKHRoaXMucG9zLnggPiB0aGlzLnhNYXggLSB0aGlzLnJhZGl1cykge1xuICAgICAgdGhpcy5wb3MueCA9ICh0aGlzLnhNYXggLSB0aGlzLnJhZGl1cykgLSAodGhpcy5wb3MueCAtICh0aGlzLnhNYXggLSB0aGlzLnJhZGl1cykpO1xuICAgICAgdGhpcy5oZWFkaW5nLnggKj0gLTEgKiBCT1VOQ0VfQUJTT1JQVElPTl9XQUxMO1xuICAgIH0gZWxzZSBpZiAodGhpcy5wb3MueCA8IHRoaXMucmFkaXVzKSB7XG4gICAgICB0aGlzLnBvcy54ID0gKCh0aGlzLnJhZGl1cykgLSAodGhpcy5wb3MueCAtIHRoaXMucmFkaXVzKSk7XG4gICAgICB0aGlzLmhlYWRpbmcueCAqPSAtMSAqIEJPVU5DRV9BQlNPUlBUSU9OX1dBTEw7XG4gICAgfVxuXG4gICAgaWYgKHRoaXMucG9zLnkgPiB0aGlzLnlNYXggLSB0aGlzLnJhZGl1cykge1xuICAgICAgdGhpcy5wb3MueSA9ICh0aGlzLnlNYXggLSB0aGlzLnJhZGl1cykgLSAodGhpcy5wb3MueSAtICh0aGlzLnlNYXggLSB0aGlzLnJhZGl1cykpO1xuICAgICAgdGhpcy5oZWFkaW5nLnkgKj0gLTEgKiBCT1VOQ0VfQUJTT1JQVElPTl9XQUxMO1xuICAgIH0gZWxzZSBpZiAodGhpcy5wb3MueSA8IHRoaXMucmFkaXVzKSB7XG4gICAgICB0aGlzLnBvcy55ID0gKCh0aGlzLnJhZGl1cykgLSAodGhpcy5wb3MueSAtIHRoaXMucmFkaXVzKSk7XG4gICAgICB0aGlzLmhlYWRpbmcueSAqPSAtMSAqIEJPVU5DRV9BQlNPUlBUSU9OX1dBTEw7XG4gICAgfVxuXG4gICAgdGhpcy5lbGVtZW50XG4gICAgICAuYXR0cigndHJhbnNmb3JtJywgJ3RyYW5zbGF0ZSgnICsgdGhpcy54U2NhbGUodGhpcy5wb3MueCkgKyAnLCcgKyB0aGlzLnlTY2FsZSh0aGlzLnBvcy55KSArICcpJyk7XG4gIH1cblxuICByZW5kZXIoY2FudmFzKSB7XG4gICAgdGhpcy5lbGVtZW50ID0gY2FudmFzLmFwcGVuZCgnY2lyY2xlJylcbiAgICAgIC5hdHRyKCdyJywgdGhpcy54U2NhbGUodGhpcy5yYWRpdXMpKTtcbiAgfVxufVxuIiwiaW1wb3J0IHtTVkdFbmdpbmUsIEJhc2VFbnRpdHl9IGZyb20gJzJkLWVuZ2luZSc7XG5pbXBvcnQgQmFsbEVudGl0eSBmcm9tICcuL0JhbGxFbnRpdHknO1xuXG5jb25zdCBTVEFSVElOR19DT1VOVCA9IDMwO1xuXG52YXIgZW50aXR5O1xudmFyIGVuZ2luZSA9IG5ldyBTVkdFbmdpbmUoXG4gICcuY2FudmFzJyxcbiAgODAwLCA4MDAsXG4gIDEwMDAwLCAxMDAwMFxuKTtcblxuZm9yICh2YXIgaSA9IDA7IGkgPCBTVEFSVElOR19DT1VOVDsgaSsrKSB7XG4gIGVudGl0eSA9IG5ldyBCYWxsRW50aXR5KCk7XG4gIGVudGl0eS5lbnRpdGllcyA9IGVuZ2luZS5lbnRpdGllcztcblxuICBlbmdpbmUuYWRkRW50aXR5KGVudGl0eSk7XG59XG5cbmVuZ2luZS5zdGFydCgpO1xuIl19
