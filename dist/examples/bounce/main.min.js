(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error("Cannot find module '"+o+"'");throw f.code="MODULE_NOT_FOUND",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){
'use strict';

var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () {
  function defineProperties(target, props) {
    for (var i = 0; i < props.length; i++) {
      var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if ("value" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);
    }
  }return function (Constructor, protoProps, staticProps) {
    if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;
  };
}();

var _get = function get(object, property, receiver) {
  if (object === null) object = Function.prototype;var desc = Object.getOwnPropertyDescriptor(object, property);if (desc === undefined) {
    var parent = Object.getPrototypeOf(object);if (parent === null) {
      return undefined;
    } else {
      return get(parent, property, receiver);
    }
  } else if ("value" in desc) {
    return desc.value;
  } else {
    var getter = desc.get;if (getter === undefined) {
      return undefined;
    }return getter.call(receiver);
  }
};

var _dEngine = require('2d-engine');

function _classCallCheck(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}

function _possibleConstructorReturn(self, call) {
  if (!self) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }return call && ((typeof call === "undefined" ? "undefined" : _typeof(call)) === "object" || typeof call === "function") ? call : self;
}

function _inherits(subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function, not " + (typeof superClass === "undefined" ? "undefined" : _typeof(superClass)));
  }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
}

var BallEntity = function (_BaseEntity) {
  _inherits(BallEntity, _BaseEntity);

  function BallEntity(options) {
    _classCallCheck(this, BallEntity);

    var _this = _possibleConstructorReturn(this, (BallEntity.__proto__ || Object.getPrototypeOf(BallEntity)).call(this, options));

    _this.speed = 4;
    _this.heading = new _dEngine.Vector(Math.random(), Math.random());
    _this.radius = 500;
    return _this;
  }

  _createClass(BallEntity, [{
    key: 'startingPosition',
    value: function startingPosition() {
      return new _dEngine.Point(Math.floor(Math.random() * this.xMax), Math.floor(Math.random() * this.yMax));
    }
  }, {
    key: 'setScales',
    value: function setScales(engine) {
      _get(BallEntity.prototype.__proto__ || Object.getPrototypeOf(BallEntity.prototype), 'setScales', this).call(this, engine);

      this.pos = this.startingPosition();
    }
  }, {
    key: 'update',
    value: function update(delta) {
      var other;
      var tempVector;
      var magnitude;
      var pushDistance;

      this.heading.y = this.heading.y + .1 / delta;

      for (var i = 0; i < this.entities.length; i++) {
        other = this.entities[i];

        tempVector = this.pos.minus(other.pos);
        magnitude = tempVector.magnitude();

        if (other !== this && magnitude < this.radius + other.radius) {
          pushDistance = tempVector.times((this.radius + other.radius - magnitude) / magnitude);

          this.pos.plusEquals(pushDistance);
          other.pos.x -= pushDistance.x;
          other.pos.y -= pushDistance.y;

          tempVector = this.heading.minus(other.heading);
          pushDistance.normalize();
          var dot = tempVector.dot(pushDistance);

          if (dot > 0) {} else {
            pushDistance.timesEquals(-.9 * dot);

            this.heading.plusEquals(pushDistance);
            other.heading.minusEquals(pushDistance);
          }
        }
      }

      this.pos.scalePlusEquals(this.speed * delta, this.heading);

      if (this.pos.x > this.xMax - this.radius) {
        this.pos.x = this.xMax - this.radius - (this.pos.x - (this.xMax - this.radius));
        this.heading.x *= -.9;
        this.heading.y *= .9;
      } else if (this.pos.x < this.radius) {
        this.pos.x = this.radius - (this.pos.x - this.radius);
        this.heading.x *= -.9;
        this.heading.y *= .9;
      }

      if (this.pos.y > this.yMax - this.radius) {
        this.pos.y = this.yMax - this.radius - (this.pos.y - (this.yMax - this.radius));
        this.heading.y *= -.9;
        this.heading.x *= .9;
      }

      this.element.attr('transform', 'translate(' + this.xScale(this.pos.x) + ',' + this.yScale(this.pos.y) + ')');
    }
  }, {
    key: 'render',
    value: function render(canvas) {
      this.element = canvas.append('circle').attr('r', this.xScale(this.radius));
    }
  }]);

  return BallEntity;
}(_dEngine.BaseEntity);

exports.default = BallEntity;

},{"2d-engine":"2d-engine"}],2:[function(require,module,exports){
'use strict';

var _dEngine = require('2d-engine');

var _BallEntity = require('./BallEntity');

var _BallEntity2 = _interopRequireDefault(_BallEntity);

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : { default: obj };
}

var entity;
var engine = new _dEngine.Engine('.canvas', 800, 800, 10000, 10000);

for (var i = 0; i < 3; i++) {
  entity = new _BallEntity2.default();
  entity.entities = engine.entities;

  engine.addEntity(entity);
}

engine.start();

},{"./BallEntity":1,"2d-engine":"2d-engine"}]},{},[2])
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
